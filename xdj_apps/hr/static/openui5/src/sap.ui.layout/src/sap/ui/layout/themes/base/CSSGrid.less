.sapUiLayoutCSSGridBoxLayoutPolyfill {
	> .sapUiLayoutCSSGridItem {
		display: inline-block;
		vertical-align: top;
		margin: 0 0.5rem 0.5rem 0;
	}
	.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(S);
	.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(M);
	.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(L);
	.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(XL);
}
.sapUiLayoutCSSGridBoxLayoutContainer {
	display: grid;
	grid-auto-rows: 1fr;
	grid-gap: 0.5rem 0.5rem;
	margin-bottom: 0.5rem;

	.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(S);
	.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(M);
	.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(L);
	.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(XL);
}

.sapUiLayoutCSSGridBoxLayoutContainer.sapFGridListGroup {
	grid-auto-rows: auto;
}

/* Mixins */

/* Mixin to generate breakpoints.
 * Used for all browsers except IE11.
 */
.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(@size, @counter: 0, @i: 1) when (@i =< 12) {
	&.sapUiLayoutCSSGridBoxLayoutSize@{size}.sapUiLayoutCSSGridBoxLayoutSpan@{size}@{i} {
			grid-template-columns: repeat(auto-fit, minmax(calc(~"(100% - @{counter} * 0.5rem) / @{i}"), 1fr));
	}

	.sapUiLayoutCSSGridBoxLayoutGenerateBreakpoints(@size, (@counter + 1), (@i + 1));
}

/* Mixin to generate IE breakpoints.
 * Adding -0.1px to the calculation to avoid rounding errors.
 */
.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(@size, @counter: 0, @i: 1) when (@i =< 12) {
	&.sapUiLayoutCSSGridBoxLayoutSize@{size}.sapUiLayoutCSSGridBoxLayoutSpan@{size}@{i} {
		@nselector: ~"@{i}n+1";

			> .sapUiLayoutCSSGridItem {
				width: calc(~"(100% - @{counter} * 0.5rem - 0.1px) / @{i}");
			}

			>  .sapUiLayoutCSSGridItem:nth-of-type(@{i}n) {
				margin-right: 0; // if there is Grouping (and headers) this doesn't calculates correctly. Should be reworked
			}
	}

	.sapUiLayoutCSSGridBoxLayoutGenerateIEBreakpoints(@size, (@counter + 1), (@i + 1));
}
